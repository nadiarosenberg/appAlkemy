{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Charo\\\\Desktop\\\\app - copia\\\\client\\\\src\\\\Home.jsx\";\nimport React, { Component } from 'react'; //Componente sin estado que devuelve la lista con los datos \n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst List = props => /*#__PURE__*/_jsxDEV(\"ul\", {\n  children: props.items.map((item, i) => {\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      children: item\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 24\n    }, this);\n  })\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 5,\n  columnNumber: 5\n}, this);\n\n_c = List;\n\nclass Home extends Component {\n  constructor() {\n    super(); //Variables de estado\n\n    this.state = {\n      done: false,\n      //para determinar si se hizo la llamada a la API\n      items: []\n    };\n  }\n\n  componentDidMount() {\n    fetch('movements/api').then(result => result.json()).then(items => this.setState({\n      //Modifica las dos variables de estado\n      done: true,\n      items\n    }));\n  }\n\n  render() {\n    if (this.state.done) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: this.state.done && this.state.success ? /*#__PURE__*/_jsxDEV(List, {\n          items: this.state.items\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No se han podido recuperar los datos del servidor\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Cargando contenidos...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }, this);\n    }\n  }\n\n}\n\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"List\");","map":{"version":3,"sources":["C:/Users/Charo/Desktop/app - copia/client/src/Home.jsx"],"names":["React","Component","List","props","items","map","item","i","Home","constructor","state","done","componentDidMount","fetch","then","result","json","setState","render","success"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B,C,CAEA;;;;AACA,MAAMC,IAAI,GAAIC,KAAD,iBACT;AAAA,YAEQA,KAAK,CAACC,KAAN,CAAYC,GAAZ,CAAgB,CAACC,IAAD,EAAOC,CAAP,KAAa;AACzB,wBAAO;AAAA,gBAAaD;AAAb,OAASC,CAAT;AAAA;AAAA;AAAA;AAAA,YAAP;AACH,GAFD;AAFR;AAAA;AAAA;AAAA;AAAA,QADJ;;KAAML,I;;AAUN,MAAMM,IAAN,SAAmBP,SAAnB,CAA6B;AACzBQ,EAAAA,WAAW,GAAG;AACV,YADU,CAEV;;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAE,KADG;AACI;AACbP,MAAAA,KAAK,EAAE;AAFE,KAAb;AAIH;;AAEDQ,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,KAAK,CAAC,eAAD,CAAL,CACCC,IADD,CACMC,MAAM,IAAEA,MAAM,CAACC,IAAP,EADd,EAECF,IAFD,CAEMV,KAAK,IAAE,KAAKa,QAAL,CAAc;AACzB;AACEN,MAAAA,IAAI,EAAE,IAFiB;AAGvBP,MAAAA;AAHuB,KAAd,CAFb;AAOH;;AAELc,EAAAA,MAAM,GAAG;AACD,QAAG,KAAKR,KAAL,CAAWC,IAAd,EAAoB;AAChB,0BACI;AAAA,kBAEQ,KAAKD,KAAL,CAAWC,IAAX,IAAmB,KAAKD,KAAL,CAAWS,OAA9B,gBACI,QAAC,IAAD;AAAM,UAAA,KAAK,EAAE,KAAKT,KAAL,CAAWN;AAAxB;AAAA;AAAA;AAAA;AAAA,gBADJ,gBAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AALZ;AAAA;AAAA;AAAA;AAAA,cADJ;AAWH,KAZD,MAYO;AACH,0BAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAR;AACH;AACJ;;AApCwB;;AAuC7B,eAAeI,IAAf","sourcesContent":["import React, {Component} from 'react';\r\n\r\n//Componente sin estado que devuelve la lista con los datos \r\nconst List = (props) => (\r\n    <ul>\r\n        {\r\n            props.items.map((item, i) => {\r\n                return <li key={i}>{item}</li>\r\n            })\r\n        }\r\n    </ul>\r\n)\r\n\r\nclass Home extends Component {\r\n    constructor() {\r\n        super();\r\n        //Variables de estado\r\n        this.state = { \r\n            done: false, //para determinar si se hizo la llamada a la API\r\n            items: []\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch('movements/api')\r\n        .then(result=>result.json())\r\n        .then(items=>this.setState({\r\n          //Modifica las dos variables de estado\r\n            done: true,\r\n            items\r\n        }))\r\n    }\r\n\r\nrender() {\r\n        if(this.state.done) {\r\n            return (\r\n                <div>\r\n                    {\r\n                        this.state.done && this.state.success ? (\r\n                            <List items={this.state.items} />\r\n                        ) : (\r\n                            <p>No se han podido recuperar los datos del servidor</p>\r\n                        )\r\n                    }\r\n                </div>\r\n            )\r\n        } else {\r\n            return (<p>Cargando contenidos...</p>)\r\n        }\r\n    }\r\n}\r\n\r\nexport default Home"]},"metadata":{},"sourceType":"module"}